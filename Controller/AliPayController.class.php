<?php
namespace Home\Controller;
use Think\Controller;
class AliPayController extends BaseController {
    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        vendor('Alipay.Corefunction');
        vendor('Alipay.Rsafunction');
        vendor('Alipay.Notify');
        vendor('Alipay.Submit');
    }


    function index(){
        $this->display("AliPay:AliPay");
    }

    /*
     * 发送订单请求
     * */
    function sendAliPayMessagePhone(){
        /**************************请求参数**************************/
        //商户订单号，商户网站订单系统中唯一订单号，必填
//        $out_trade_no = $_POST['WIDout_trade_no'];
        $userid=$_POST["Userid"];
        session("phonepay",$userid);
//        var_dump($userid);
//        exit();-
        //生成订单号
        $ordernum="JDZB".time().$userid;

        $out_trade_no = $ordernum;

        //订单名称，必填
        $subject = $_POST['WIDsubject'];

        //付款金额，必填
        $total_fee = $_POST['WIDtotal_fee'];

        //商品描述，可空
        $body = $_POST['WIDbody'];


        $aliPayConf=C('ALI_CONFIG');
        $aliPayConf["out_trade_no"]=$out_trade_no;
        $aliPayConf["subject"]=$subject;
        $aliPayConf["total_fee"]=$total_fee;
        $aliPayConf["body"]=$body;
        //建立请求
        $alipaySubmit = new \AlipaySubmit($aliPayConf);
        $html_text = $alipaySubmit->buildRequestForm($aliPayConf,"get", "确认");
        echo $html_text;
    }


    function sendAliPayMessage(){
        /**************************请求参数**************************/
        //商户订单号，商户网站订单系统中唯一订单号，必填
//        $out_trade_no = $_POST['WIDout_trade_no'];
        $user=session("userinfo");
        $userid=$user["userid"];
        //生成订单号
        $ordernum="JDZB".time().$userid;

        $out_trade_no = $ordernum;

        //订单名称，必填
        $subject = $_POST['WIDsubject'];

        //付款金额，必填
        $total_fee = $_POST['WIDtotal_fee'];

        //商品描述，可空
        $body = $_POST['WIDbody'];


        $aliPayConf=C('ALI_CONFIG');
        $aliPayConf["out_trade_no"]=$out_trade_no;
        $aliPayConf["subject"]=$subject;
        $aliPayConf["total_fee"]=$total_fee;
        $aliPayConf["body"]=$body;
        //建立请求
        $alipaySubmit = new \AlipaySubmit($aliPayConf);
        $html_text = $alipaySubmit->buildRequestForm($aliPayConf,"get", "确认");
        echo $html_text;
    }

    /*
     *异步回调
     * */
    public function notify_url(){
        //异步通知调用返回地址
        $aliPayConf=C('ALI_CONFIG');

        $alipayNotify = new \AlipayNotify($aliPayConf);
        $verify_result = $alipayNotify->verifyNotify();

        if($verify_result) {//验证成功
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //请在这里加上商户的业务逻辑程序代


            //——请根据您的业务逻辑来编写程序（以下代码仅作参考）——

            //获取支付宝的通知返回参数，可参考技术文档中服务器异步通知参数列表

            //成功标志
            $is_success=$_GET["is_success"];

            //签名方式
            $sign_type=$_GET["sign_type"];

            //签名
            $sign=$_GET["sign"];

            //商户网站唯一订单号
            $out_trade_no=$_GET["out_trade_no"];

            //商品名称
            $subject=$_GET["subject"];

            //支付宝交易号
            $trade_no=$_GET["trade_no"];

            //卖家支付宝用户号
            $seller_id=$_GET["seller_id"];

            //买家支付宝账户号
            $buyer_id=$_GET["buyer_id"];

            //交易目前所处的状态。成功状态的值只有两个：TRADE_FINISHED（普通即时到账的交易成功状态）；TRADE_SUCCESS（开通了高级即时到账或机票分销产品后的交易成功状态）
            $trade_status=$_GET["trade_status"];

            //通知时间
            $notify_time=$_GET["notify_time"];

            //买家账号或手机号
            $buyer_email=$_GET["buyer_email"];

            //交易金额
            $total_fee=$_GET["total_fee"];

            $this->assign("totil_fee",$total_fee);
            $this->assign("buyer_email",$buyer_email);


            if($_POST['trade_status'] == 'TRADE_FINISHED') {
                //判断该笔订单是否在商户网站中已经做过处理
                //如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序
                //请务必判断请求时的total_fee、seller_id与通知时获取的total_fee、seller_id为一致的
                //如果有做过处理，不执行商户的业务程序
                $this->buyInfo($total_fee,1,$total_fee,$notify_time,1,1,$seller_id,$out_trade_no,$buyer_id,$buyer_email,$trade_no,$total_fee,$trade_status,$notify_time);
                //注意：
                //退款日期超过可退款期限后（如三个月可退款），支付宝系统发送该交易状态通知

                //调试用，写文本函数记录程序运行情况是否正常
//                logResult("这里写入想要调试的代码变量值，或其他运行的结果记录");
            }
            else if ($_POST['trade_status'] == 'TRADE_SUCCESS') {
                //判断该笔订单是否在商户网站中已经做过处理
                //如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序
                //请务必判断请求时的total_fee、seller_id与通知时获取的total_fee、seller_id为一致的
                //如果有做过处理，不执行商户的业务程序
                $this->buyInfo($total_fee,1,$total_fee,$notify_time,1,1,$seller_id,$out_trade_no,$buyer_id,$buyer_email,$trade_no,$total_fee,$trade_status,$notify_time);
                //注意：
                //付款完成后，支付宝系统发送该交易状态通知

                //调试用，写文本函数记录程序运行情况是否正常
                //logResult("这里写入想要调试的代码变量值，或其他运行的结果记录");
            }

            //——请根据您的业务逻辑来编写程序（以上代码仅作参考）——

            echo "success";		//请不要修改或删除

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        }
        else {
            //验证失败
            echo "fail";

            //调试用，写文本函数记录程序运行情况是否正常
            //logResult("这里写入想要调试的代码变量值，或其他运行的结果记录");
        }
    }


    /*
     *同步回调
     * */
    public function return_url(){
        $aliPayConf=C('ALI_CONFIG');


        //同步通知返回调用地址
        $alipayNotify = new \AlipayNotify($aliPayConf);
        $verify_result = $alipayNotify->verifyReturn();
        if($verify_result) {//验证成功
            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //请在这里加上商户的业务逻辑程序代码

            //——请根据您的业务逻辑来编写程序（以下代码仅作参考）——
            //获取支付宝的通知返回参数，可参考技术文档中页面跳转同步通知参数列表

            //成功标志
            $is_success=$_GET["is_success"];

            //签名方式
            $sign_type=$_GET["sign_type"];

            //签名
            $sign=$_GET["sign"];

            //商户网站唯一订单号
            $out_trade_no=$_GET["out_trade_no"];

            //商品名称
            $subject=$_GET["subject"];

            //支付宝交易号
            $trade_no=$_GET["trade_no"];

            //卖家支付宝用户号
            $seller_id=$_GET["seller_id"];

            //买家支付宝账户号
            $buyer_id=$_GET["buyer_id"];

            //交易目前所处的状态。成功状态的值只有两个：TRADE_FINISHED（普通即时到账的交易成功状态）；TRADE_SUCCESS（开通了高级即时到账或机票分销产品后的交易成功状态）
            $trade_status=$_GET["trade_status"];

            //通知时间
            $notify_time=$_GET["notify_time"];

            //买家账号或手机号
            $buyer_email=$_GET["buyer_email"];

            //交易金额
            $total_fee=$_GET["total_fee"];

            $this->assign("totil_fee",$total_fee);
            $this->assign("buyer_email",$buyer_email);

            if($_GET['trade_status'] == 'TRADE_FINISHED' || $_GET['trade_status'] == 'TRADE_SUCCESS') {
                //判断该笔订单是否在商户网站中已经做过处理
                //判断该笔订单是否在商户网站中已经做过处理
                //如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，并执行商户的业务程序
                //如果有做过处理，不执行商户的业务程序
                $this->buyInfo($total_fee,1,$total_fee,$notify_time,1,1,$seller_id,$out_trade_no,$buyer_id,$buyer_email,$trade_no,$total_fee,$trade_status,$notify_time);
            }
            else {
                echo "trade_status=".$_GET['trade_status'];
            }


           $this->display("AliPay:pay");

            //——请根据您的业务逻辑来编写程序（以上代码仅作参考）——

            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        }
        else {
            //验证失败
            //如要调试，请看alipay_notify.php页面的verifyReturn函数
            echo "验证失败";
        }
    }
}