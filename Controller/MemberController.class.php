<?php
namespace Home\Controller;
use Think\Controller;
class MemberController extends BaseController {
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        if(session("userinfo")==null){
            echo "<script>alert('请先登录！')</script>";
            $this->display("Index:index");
        }else{
            vendor("Pili.Pili");
        }

    }

    public function anchor(){
        $this->display("Member:anchor");
    }

    public function addAccred(){
        // p($_FILES);die;
        $userid=session("userinfo.userid");
        $user=session("userinfo");
        if($userid!=null){
            // $data["userid"]=$user["userid"];

            $data["realname"]=$_POST["name"];
            $data["idcard"]=$_POST["usercode"];
            $data["roomnotice"]=$_POST["roomnotice"];
            $data["remark"]=$_POST["trproducts"];


            $imgresult=$this->upload();
            $data["idcardimg"]="/Upload/".$user['username'].'/'.$imgresult['cord']["savename"];

            $result=M("accred")->add($data);

            if($result){
                $res=M("userinfos")->where(array('userid'=>$userid))->setField("accredid",$result);
                if ($res) {
                $this->success("申请成功！",U("Index/index"));
                }
            }else{
                $this->error("申请失败！");
            }
        }

    }


    public function live(){
        $user=session("userinfo");
        $userid=$user["userid"];

        //流鉴权
        $Key="NEW-JD-".time();

        //判断当前主播是否已经是注册的主播，如果没有注册跳转到注册页面，如果已经注册直接拉流准备开始直播，并且进入websocket房间内
        $roomid=M("userinfos")->field("roomid")->where("userid=$userid")->find();
        $roomid=$roomid["roomid"];

        $credentials=new \Qiniu\Credentials(C("ACCESS_KEY"),C("SECRET_KEY"));
        $hub=new \Pili\Hub($credentials,C("HUB"));

        if($roomid){
            $streamid=M("rooms")->field("webcastkeyid")->where("roomid=132")->find();
            $streamid=$streamid["webcastkeyid"];
            $stream=$hub->getStream($streamid);


            //生成推流地址
//            $publishUrl = $stream->rtmpPublishUrl();
            //转成直播观看地址
            //rtmp格式地址
            $rtmpurls = $stream->rtmpLiveUrls();
            var_dump($rtmpurls);

            //flv格式地址
            $flvurls=$stream->httpFlvLiveUrls();
            var_dump($flvurls);

            //m3u8格式地址
            $hlsurls=$stream->hlsLiveUrls();
            var_dump($hlsurls);

            $this->assign("rtmpurls",$rtmpurls);
            $this->assign("flvurls",$flvurls);
            $this->assign("hlsurls",$hlsurls);
            $this->display("Member:live");
        }else{
           $this->redirect(U("Member/anchor"));
        }

    }

    //新增流并且加入数据库
    public function createStream($hub,$classifyid,$userid,$Key)
    {
        $roomcod="JDCF".time();
        $title = $roomcod;     // optional, auto-generated as default 一般对应主播房间号
        $publishKey = $Key;     // optional, auto-generated as default 流密钥，用于生成推流鉴权凭证
        $publishSecurity ="static";     // optional, can be "dynamic" or "static", "dynamic" as default 推流鉴权策略, 一般为"static", 针对安全要求较高的UGC推流建议用"dynamic"
        $stream = $hub->createStream($title, $publishKey, $publishSecurity); # => Stream Object
        //房间名
        $data["roomcode"] = $roomcod;
        $data["webcastkeyid"] = $stream->id;
        $data["authentication"] = $publishKey;
        $data["classifyid"] = $classifyid;
        $data["authentication"]=$Key;
        $roomid = M("rooms")->add($data);
        if ($roomid) {
            $id = M("userinfos")->where("userid=$userid")->setField("roomid", $roomid);


        }
    }
    
}